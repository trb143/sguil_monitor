#! /usr/bin/python3
###############################################################################
# Sguil Monitor                                                               #
# --------------------------------------------------------------------------- #
# Copyright (c) 2017 Tim Bentley                                              #
# --------------------------------------------------------------------------- #
# This program is free software; you can redistribute it and/or modify it     #
# under the terms of the GNU General Public License as published by the Free  #
# Software Foundation; version 2 of the License.                              #
#                                                                             #
# This program is distributed in the hope that it will be useful, but WITHOUT #
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or       #
# FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for    #
# more details.                                                               #
#                                                                             #
# You should have received a copy of the GNU General Public License along     #
# with this program; if not, write to the Free Software Foundation, Inc., 59  #
# Temple Place, Suite 330, Boston, MA 02111-1307 USA                          #
###############################################################################

import ipaddress
import smtplib
import yaml

from pathlib import Path
from email.mime.text import MIMEText

import os

TEMP_RUN_PATH = os.path.abspath(os.path.join(os.path.dirname(__file__), '..'))
RUN_PATH = Path(TEMP_RUN_PATH)

print('SGUIL_Monitor V 0.1')
print('Path is: ' + str(RUN_PATH))

path = os.getcwd()
with open(str(RUN_PATH / 'config.yaml'), 'r') as f:
    doc = yaml.load(f)

print('Config loaded')

with open(str(RUN_PATH / 'reports' / doc['report']), 'r') as csv_file:
    content = csv_file.readlines()
    print('Processing report data')
    report_line = ""
    for row in content:
        row = row.replace('\n', '')
        row = row.replace('\t', '')
        fields = row.split(',')
        if fields[0] != 'timestamp':
            source = str(ipaddress.ip_address(int(fields[1])))
            target = str(ipaddress.ip_address(int(fields[2])))
            report_line += 'Event {clas} - {evnt}\nOccurred at {tme} between machines {srce} - {trget}\n'.\
                format(clas=fields[3], evnt=fields[4], tme=fields[0], srce=source, trget=target)

    if report_line:
        # Create the container (outer) email message.
        print('Sending email')
        msg = MIMEText(report_line)
        msg['Subject'] = 'Activity Detected'
        to = doc['email-to']
        frm = doc['email-from']
        msg['From'] = frm
        msg['To'] = to
        msg.subject = 'Activity Detected'

        # Send the email via our own SMTP server.
        s = smtplib.SMTP('localhost')
        s.sendmail(frm, to, msg.as_string())
        s.quit()
        print('Email sent to ' + to)
